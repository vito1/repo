<h1>ES5 - Speaking JS</h1>
<a href="http://speakingjs.com/es5/pr02.html#how_to_read">Link</a>
<h2>Fragen</h2>
<span class="Frage">Was ist der Unterschied zwischen var, let, const
<span class="Frage">Wie funktionieren Regular Expressions</span>
<span class="Frage">Was ist ein Object literal?</span>
<span class="Frage">Wenn jede Property einen Key und Value hat, wie greift man darauf zu? Oder was sind zum Beispiel die Namen und Values von einem String?</span>
<span class="Frage">Was ist der Unterschied zwischen Paramenter und Argument?</span>
<span class="Frage">Was ist der underschied zwischen == und ===?</span>
<span class="Frage">Kann man sich das Object Array.prototype ansehen?</span>
<h3>Intro</h3>
<ul>
	<li>JavaScript stores the methods of Array instaces in the object Array.prototype</li>
</ul>
<h3>Basic Javascript</h3>
<ul>
	<li>JavaScript often fails silently and converts values automatically, because initially it couldn't throw exceptions</li>
	<li>JavaScript enables a programming style that is a mixture of funtional programming (higher-order functions; built-in map, reduce, etc) and object-oriented programming (pbjects, inheritance)</li>
	<li>JavaScript has two major syntactic categories: statements and expressions: Statements do things and Expressions produce values. A function call is an expression</li>
	<li>Statements cannot be used as function arguments</li>
	<li>Expression produce values and can be written whereever a value is exprected - for example, as an argument in a function call or at the right side of an assignment</li>
	<li>Variables are declared before they are used, they can be declared and assigned at the same time</li>
	<li>Paramenters are part of the function declaration, arguments are passed with the function call</li>
	<li>All values in JavaScript have properties (except the non-values undefined and null). Each property has a key(name) and a value</li>
	<li>Primative values are booleans, number, strings, null and undefined, all other values are objects. Each object has a unique identity and is only (strictly) equal to itself</li>
	<li>Primatives are compared by value, are always immutable(properties can't be changed added or removed)</li>

</ul>
Aufgaben
<p>If-else else statement as a statement or an expression </p>
<p>A function expression</p>
<p>Calling a method of an object</p>
<p>Comparing two strictly unequal values</p>
<p>Read object's property</p>
